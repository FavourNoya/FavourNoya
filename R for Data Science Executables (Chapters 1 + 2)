# 1.1 - PreReqs (Packages and Libraries)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(palmerpenguins)
library(ggthemes)

# 1.2 The penguins data frame ---------------------------------------------
View(penguins)

ggplot(data = penguins)

ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g)
)

ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
  geom_point()
#> Warning: Removed 2 rows containing missing values or values outside the scale range
#> (`geom_point()`).

ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species)
) +
  geom_point()

ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species)
) +
  geom_point() +
  geom_smooth(method = "lm")

ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
  geom_point(mapping = aes(color = species)) +
  geom_smooth(method = "lm")

ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
  geom_point(mapping = aes(color = species, shape = species)) +
  geom_smooth(method = "lm")

ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
  geom_point(aes(color = species, shape = species)) +
  geom_smooth(method = "lm") +
  labs(
    title = "Body mass and flipper length",
    subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
    x = "Flipper length (mm)", y = "Body mass (g)",
    color = "Species", shape = "Species"
  ) +
  scale_color_colorblind()

# 1.3 ggplot2 calls -------------------------------------------------------
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
  geom_point()

ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) + 
  geom_point()

penguins |> 
  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) + 
  geom_point()

# 1.4 Visualizing distributions -------------------------------------------
ggplot(penguins, aes(x = species)) +
  geom_bar()

ggplot(penguins, aes(x = fct_infreq(species))) +
  geom_bar()

ggplot(penguins, aes(x = body_mass_g)) +
  geom_histogram(binwidth = 200)

ggplot(penguins, aes(x = body_mass_g)) +
  geom_histogram(binwidth = 20)
ggplot(penguins, aes(x = body_mass_g)) +
  geom_histogram(binwidth = 2000)

ggplot(penguins, aes(x = body_mass_g)) +
  geom_density()
#> Warning: Removed 2 rows containing non-finite outside the scale range
#> (`stat_density()`).


# 1.5 Visualizing relations -----------------------------------------------

# 1.5.1: Boxplot - most condense presentation of info 
ggplot(penguins, aes(x = species, y = body_mass_g)) +
  geom_boxplot()

# Density Plots
ggplot(penguins, aes(x = body_mass_g, color = species)) +
  geom_density(linewidth = 0.75)

# Color and Species Aesthetics
ggplot(penguins, aes(x = body_mass_g, color = species, fill = species)) +
  geom_density(alpha = 0.5)

# 1.5.2
ggplot(penguins, aes(x = island, fill = species)) +
  geom_bar()

# 1.5.3
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point()

# 3 or more variables
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point(aes(color = species, shape = island))

ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point(aes(color = species, shape = species)) +
  facet_wrap(~island)

ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point(aes(color = species, shape = species)) +
  facet_wrap(~island)

# 1.6
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point()
ggsave(filename = "penguin-plot.png")

# 1.7 - Common Problem Example
ggplot(data = mpg) 
+ geom_point(mapping = aes(x = displ, y = hwy))
# THE CORRECT WAY
library(ggplot2)

ggplot(mtcars, aes(x = mpg, y = hp)) + 
  geom_point()

#
# CHAPTER 2 ---------------------------------------------------------------
#

# 2.1
x <- 3 * 4
primes <- c(2, 3, 5, 7, 11, 13)

# 2.2: create VECTOR of primes - allows for grouping of variables
primes <- c(2, 3, 5, 7, 11, 13)

# multiply primes by 2
primes * 2
primes - 1

# 2.3 - control, shift, + c for comment
# i_use_snake_case - okay
# otherPeopleUseCamelCase - no
# some.people.use.periods - okay
# And_aFew.People_RENOUNCEconvention - nope

x

this_is_a_really_long_name <- 2.5
r_rocks <- 2^3

r_rock
#> Error: object 'r_rock' not found
R_rocks
# you need to pick one + be consistent
#> Error: object 'R_rocks' not found

# 2.4
# function_name(argument1 = value1, argument2 = value2, ...)
seq(from = 1, to = 10)

# This reps 'INSTANT HELP'
??seq()

x <- "hello world"
# check environment for value of x

#
# 1.2.5 Exercises ---------------------------------------------------------
#

# 1
nrow(penguins) # Number of rows
ncol(penguins) # Number of columns

# 2
?penguins

# 3
ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
  geom_point()

# 4
ggplot(data = penguins, aes(x = species, y = bill_depth_mm)) +
  geom_boxplot()

# 5
# ggplot(data = penguins) + 
#   geom_point()

ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
  geom_point()

# 6
ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
  geom_point(na.rm = TRUE)

# 7
ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
  geom_point(na.rm = TRUE) +
  labs(caption = "Data come from the palmerpenguins package.")

# 8
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point(aes(color = bill_depth_mm)) +
  geom_smooth()

# 9
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g, color = island)
) +
  geom_point() +
  geom_smooth(se = FALSE)

# 10
ggplot(
  data = penguins,
  mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
  geom_point() +
  geom_smooth()

ggplot() +
  geom_point(
    data = penguins,
    mapping = aes(x = flipper_length_mm, y = body_mass_g)
  ) +
  geom_smooth(
    data = penguins,
    mapping = aes(x = flipper_length_mm, y = body_mass_g)
  )

# 1.4.3 Exercises ---------------------------------------------------------

# 1
ggplot(penguins, aes(y = species)) +
  geom_bar()

# 2
ggplot(penguins, aes(x = species)) +
  geom_bar(color = "red")

ggplot(penguins, aes(x = species)) +
  geom_bar(fill = "red")

# 3
ggplot(diamonds, aes(x = carat)) +
  geom_histogram(bins = 30)  # Adjust the number of bins as needed

# 4
ggplot(diamonds, aes(x = carat)) +
  geom_histogram(binwidth = 0.05)

ggplot(diamonds, aes(x = carat)) +
  geom_histogram(binwidth = 0.5)

# 1.5.5 Exercises ---------------------------------------------------------

# 1
str(mpg)
glimpse(mpg)

# 2
ggplot(mpg, aes(x = displ, y = hwy, color = cty)) + geom_point()
ggplot(mpg, aes(x = displ, y = hwy, size = cty)) + geom_point()
ggplot(mpg, aes(x = displ, y = hwy, color = cty, size = cty)) + geom_point()
ggplot(mpg, aes(x = displ, y = hwy, shape = class)) + geom_point()

# 3
ggplot(mpg, aes(x = displ, y = hwy, linewidth = cty)) + geom_point()

# 4
ggplot(mpg, aes(x = displ, y = hwy, color = cty, size = cty)) + geom_point()

# 5
ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) + geom_point()
ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + geom_point() + facet_wrap(~species)

# 6
ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
  geom_point() +
  labs(color = "Species", shape = "Species")

# 7
ggplot(penguins, aes(x = island, fill = species)) + geom_bar(position = "fill")
ggplot(penguins, aes(x = species, fill = island)) + geom_bar(position = "fill")


# 1.6.1 Exercises ---------------------------------------------------------

# 1
ggplot(mpg, aes(x = class)) + geom_bar()
ggplot(mpg, aes(x = cty, y = hwy)) + geom_point()
ggsave("mpg-plot.png")

# 2a
ggsave("mpg-plot.pdf")

# 2b
?ggsave


# 2.5 Exercises -----------------------------------------------------------

# 1
my_variable <- 10
my_varıable
#> Error: object 'my_varıable' not found

# 2 - CORRECT CODE
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy)) + 
  geom_smooth(mapping = aes(x = displ, y = hwy), method = "lm")

# 3 was done for practice

# 4
my_bar_plot <- ggplot(mpg, aes(x = class)) +
  geom_bar()
my_scatter_plot <- ggplot(mpg, aes(x = cty, y = hwy)) +
  geom_point()
ggsave(filename = "mpg-plot.png", plot = my_bar_plot)
