# CH. 11 PREREQS ----------------------------------------------------------
library(tidyverse)
library(scales)
library(ggrepel)
library(patchwork)

# 11.2
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class)) +
  geom_smooth(se = FALSE) +
  labs(
    x = "Engine displacement (L)",
    y = "Highway fuel economy (mpg)",
    color = "Car type",
    title = "Fuel efficiency generally decreases with engine size",
    subtitle = "Two seaters (sports cars) are an exception because of their light weight",
    caption = "Data from fueleconomy.gov"
  )

df <- tibble(
  x = 1:10,
  y = cumsum(x^2)
)

ggplot(df, aes(x, y)) +
  geom_point() +
  labs(
    x = quote(x[i]),
    y = quote(sum(x[i] ^ 2, i == 1, n))
  )

# 11.3
label_info <- mpg |>
  group_by(drv) |>
  arrange(desc(displ)) |>
  slice_head(n = 1) |>
  mutate(
    drive_type = case_when(
      drv == "f" ~ "front-wheel drive",
      drv == "r" ~ "rear-wheel drive",
      drv == "4" ~ "4-wheel drive"
    )
  ) |>
  select(displ, hwy, drv, drive_type)

label_info
#> # A tibble: 3 × 4
#> # Groups:   drv [3]
#>   displ   hwy drv   drive_type       
#>   <dbl> <int> <chr> <chr>            
#> 1   6.5    17 4     4-wheel drive    
#> 2   5.3    25 f     front-wheel drive
#> 3   7      24 r     rear-wheel drive

ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point(alpha = 0.3) +
  geom_smooth(se = FALSE) +
  geom_text(
    data = label_info, 
    aes(x = displ, y = hwy, label = drive_type),
    fontface = "bold", size = 5, hjust = "right", vjust = "bottom"
  ) +
  theme(legend.position = "none")
#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'

ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point(alpha = 0.3) +
  geom_smooth(se = FALSE) +
  geom_label_repel(
    data = label_info, 
    aes(x = displ, y = hwy, label = drive_type),
    fontface = "bold", size = 5, nudge_y = 2
  ) +
  theme(legend.position = "none")
#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'

potential_outliers <- mpg |>
  filter(hwy > 40 | (hwy > 20 & displ > 5))

trend_text <- "Larger engine sizes tend to have lower fuel economy." |>
  str_wrap(width = 30)
trend_text
#> [1] "Larger engine sizes tend to\nhave lower fuel economy."

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  annotate(
    geom = "label", x = 3.5, y = 38,
    label = trend_text,
    hjust = "left", color = "red"
  ) +
  annotate(
    geom = "segment",
    x = 3, y = 35, xend = 5, yend = 25, color = "red",
    arrow = arrow(type = "closed")
  )

# 11.4
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class))

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class)) +
  scale_x_continuous() +
  scale_y_continuous() +
  scale_color_discrete()

ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  scale_y_continuous(breaks = seq(15, 40, by = 5)) 

ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  scale_x_continuous(labels = NULL) +
  scale_y_continuous(labels = NULL) +
  scale_color_discrete(labels = c("4" = "4-wheel", "f" = "front", "r" = "rear"))

# Left
ggplot(diamonds, aes(x = price, y = cut)) +
  geom_boxplot(alpha = 0.05) +
  scale_x_continuous(labels = label_dollar())

# Right
ggplot(diamonds, aes(x = price, y = cut)) +
  geom_boxplot(alpha = 0.05) +
  scale_x_continuous(
    labels = label_dollar(scale = 1/1000, suffix = "K"), 
    breaks = seq(1000, 19000, by = 6000)
  )

ggplot(diamonds, aes(x = cut, fill = clarity)) +
  geom_bar(position = "fill") +
  scale_y_continuous(name = "Percentage", labels = label_percent())

presidential |>
  mutate(id = 33 + row_number()) |>
  ggplot(aes(x = start, y = id)) +
  geom_point() +
  geom_segment(aes(xend = end, yend = id)) +
  scale_x_date(name = NULL, breaks = presidential$start, date_labels = "'%y")

base <- ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class))

base + theme(legend.position = "right") # the default
base + theme(legend.position = "left")
base + 
  theme(legend.position = "top") +
  guides(color = guide_legend(nrow = 3))
base + 
  theme(legend.position = "bottom") +
  guides(color = guide_legend(nrow = 3))

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class)) +
  geom_smooth(se = FALSE) +
  theme(legend.position = "bottom") +
  guides(color = guide_legend(nrow = 2, override.aes = list(size = 4)))
#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'

# Left
ggplot(diamonds, aes(x = carat, y = price)) +
  geom_bin2d()

# Right
ggplot(diamonds, aes(x = log10(carat), y = log10(price))) +
  geom_bin2d()

ggplot(diamonds, aes(x = carat, y = price)) +
  geom_bin2d() + 
  scale_x_log10() + 
  scale_y_log10()

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv))

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  scale_color_brewer(palette = "Set1")

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv, shape = drv)) +
  scale_color_brewer(palette = "Set1")

presidential |>
  mutate(id = 33 + row_number()) |>
  ggplot(aes(x = start, y = id, color = party)) +
  geom_point() +
  geom_segment(aes(xend = end, yend = id)) +
  scale_color_manual(values = c(Republican = "#E81B23", Democratic = "#00AEF3"))

df <- tibble(
  x = rnorm(10000),
  y = rnorm(10000)
)

ggplot(df, aes(x, y)) +
  geom_hex() +
  coord_fixed() +
  labs(title = "Default, continuous", x = NULL, y = NULL)

ggplot(df, aes(x, y)) +
  geom_hex() +
  coord_fixed() +
  scale_fill_viridis_c() +
  labs(title = "Viridis, continuous", x = NULL, y = NULL)

ggplot(df, aes(x, y)) +
  geom_hex() +
  coord_fixed() +
  scale_fill_viridis_b() +
  labs(title = "Viridis, binned", x = NULL, y = NULL)

# Left
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth()

# Right
mpg |>
  filter(displ >= 5 & displ <= 6 & hwy >= 10 & hwy <= 25) |>
  ggplot(aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth()

# Left
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth() +
  scale_x_continuous(limits = c(5, 6)) +
  scale_y_continuous(limits = c(10, 25))

# Right
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth() +
  coord_cartesian(xlim = c(5, 6), ylim = c(10, 25))

suv <- mpg |> filter(class == "suv")
compact <- mpg |> filter(class == "compact")

# Left
ggplot(suv, aes(x = displ, y = hwy, color = drv)) +
  geom_point()

# Right
ggplot(compact, aes(x = displ, y = hwy, color = drv)) +
  geom_point()

x_scale <- scale_x_continuous(limits = range(mpg$displ))
y_scale <- scale_y_continuous(limits = range(mpg$hwy))
col_scale <- scale_color_discrete(limits = unique(mpg$drv))

# Left
ggplot(suv, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  x_scale +
  y_scale +
  col_scale

# Right
ggplot(compact, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  x_scale +
  y_scale +
  col_scale

# 11.5
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class)) +
  geom_smooth(se = FALSE) +
  theme_bw()

ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  labs(
    title = "Larger engine sizes tend to have lower fuel economy",
    caption = "Source: https://fueleconomy.gov."
  ) +
  theme(
    legend.position = c(0.6, 0.7),
    legend.direction = "horizontal",
    legend.box.background = element_rect(color = "black"),
    plot.title = element_text(face = "bold"),
    plot.title.position = "plot",
    plot.caption.position = "plot",
    plot.caption = element_text(hjust = 0)
  )
#> Warning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2
#> 3.5.0.
#> ℹ Please use the `legend.position.inside` argument of `theme()` instead.

# 11.6
p1 <- ggplot(mpg, aes(x = displ, y = hwy)) + 
  geom_point() + 
  labs(title = "Plot 1")
p2 <- ggplot(mpg, aes(x = drv, y = hwy)) + 
  geom_boxplot() + 
  labs(title = "Plot 2")
p1 + p2

p3 <- ggplot(mpg, aes(x = cty, y = hwy)) + 
  geom_point() + 
  labs(title = "Plot 3")
(p1 | p3) / p2

p1 <- ggplot(mpg, aes(x = drv, y = cty, color = drv)) + 
  geom_boxplot(show.legend = FALSE) + 
  labs(title = "Plot 1")

p2 <- ggplot(mpg, aes(x = drv, y = hwy, color = drv)) + 
  geom_boxplot(show.legend = FALSE) + 
  labs(title = "Plot 2")

p3 <- ggplot(mpg, aes(x = cty, color = drv, fill = drv)) + 
  geom_density(alpha = 0.5) + 
  labs(title = "Plot 3")

p4 <- ggplot(mpg, aes(x = hwy, color = drv, fill = drv)) + 
  geom_density(alpha = 0.5) + 
  labs(title = "Plot 4")

p5 <- ggplot(mpg, aes(x = cty, y = hwy, color = drv)) + 
  geom_point(show.legend = FALSE) + 
  facet_wrap(~drv) +
  labs(title = "Plot 5")

(guide_area() / (p1 + p2) / (p3 + p4) / p5) +
  plot_annotation(
    title = "City and highway mileage for cars with different drive trains",
    caption = "Source: https://fueleconomy.gov."
  ) +
  plot_layout(
    guides = "collect",
    heights = c(1, 3, 2, 4)
  ) &
  theme(legend.position = "top")


# EXECUTABLES FOR THIS CHAPTER --------------------------------------------

# 11.2.1
# 1
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class)) +  # Points colored by car type
  geom_smooth(se = FALSE) +         # Add a smooth line without confidence intervals
  labs(
    title = "Fuel Efficiency of Cars Based on Size of the Engine",
    subtitle = "Larger engines typically have lower highway fuel economy",
    x = "Engine Displacement (L)",  # X-axis label
    y = "Highway Fuel Economy (mpg)",  # Y-axis label
    color = "Car Type",  # Legend title for car type
    caption = "Data source: fueleconomy.gov"  # Caption with the source
  )

# 2
ggplot(mpg, aes(x = cty, y = hwy)) +
  geom_point(aes(color = drv, shape = drv)) +  # Color and shape by drive train
  labs(
    title = "City vs Highway Fuel Economy by Drive Train Type",
    x = "City Fuel Economy (mpg)",  # X-axis label
    y = "Highway Fuel Economy (mpg)",  # Y-axis label
    color = "Drive Train Type",  # Legend title for drive train
    shape = "Drive Train Type"   # Legend title for shape
  )

# 3
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class)) +
  geom_smooth(se = FALSE) +
  labs(
    title = "Fuel Efficiency of Cars Based on Engine Size",
    subtitle = "As engine size increases, fuel economy generally decreases",
    x = "Engine Displacement (L)",  # X-axis label
    y = "Highway Fuel Economy (mpg)",  # Y-axis label
    color = "Car Type",  # Legend for car type
    caption = "Source: fueleconomy.gov"  # Caption with data source
  )

# 11.3.1
# 1
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  geom_text(aes(x = Inf, y = Inf, label = "Top Right"), hjust = 1, vjust = 1) + # Top right
  geom_text(aes(x = -Inf, y = Inf, label = "Top Left"), hjust = 0, vjust = 1) + # Top left
  geom_text(aes(x = Inf, y = -Inf, label = "Bottom Right"), hjust = 1, vjust = 0) + # Bottom right
  geom_text(aes(x = -Inf, y = -Inf, label = "Bottom Left"), hjust = 0, vjust = 0)   # Bottom left

# 2
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  annotate("point", x = 3, y = 30, shape = 21, size = 4, color = "blue", fill = "red")

# 3
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  facet_wrap(~ drv) + 
  geom_text(aes(label = drv), 
            data = mpg, 
            position = position_nudge(y = 1),  
            check_overlap = TRUE)  

# 4
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point(alpha = 0.3) +
  geom_label(
    data = label_info, 
    aes(x = displ, y = hwy, label = drive_type),
    fontface = "bold", size = 5, nudge_y = 2,
    label.padding = unit(0.5, "lines"),  # Add padding around the label
    label.r = unit(0.5, "lines"),  # Rounded corners for the label box
    label.size = 0.5,  # Border size of the label box
    label.fill = "lightblue"  # Fill color of the label box
  ) +
  theme(legend.position = "none")

# 5
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  geom_segment(aes(xend = 6, yend = 35), arrow = arrow(type = "closed", angle = 15, length = unit(0.3, "inches")))
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  geom_segment(aes(xend = 6, yend = 35), arrow = arrow(type = "open", angle = 30, length = unit(0.5, "inches")))
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  geom_segment(aes(xend = 6, yend = 35), arrow = arrow(type = "closed", angle = 15, length = unit(0.3, "inches"))) +
  geom_segment(aes(xend = displ, yend = hwy), arrow = arrow(type = "closed", angle = 15, length = unit(0.3, "inches")))

# 11.4.6
# 1
df <- tibble(
  x = rnorm(10000),
  y = rnorm(10000)
)
ggplot(df, aes(x, y)) +
  geom_hex() +
  scale_color_gradient(low = "white", high = "red") +
  coord_fixed()
ggplot(df, aes(x, y)) +
  geom_hex() +
  scale_fill_gradient(low = "white", high = "red") +
  coord_fixed()

# 2 - completed in report

# 3a
presidential |> 
  mutate(id = 33 + row_number()) |> 
  ggplot(aes(x = start, y = id, color = party)) +
  geom_point() +
  geom_segment(aes(xend = end, yend = id)) +
  scale_x_date(name = NULL, breaks = seq(from = as.Date("1789-01-01"), to = as.Date("2020-01-01"), by = "4 years")) +
  scale_color_manual(values = c(Republican = "#E81B23", Democratic = "#00AEF3"))

# 3b
presidential |> 
  mutate(id = 33 + row_number()) |> 
  ggplot(aes(x = start, y = id, color = party)) +
  geom_point() +
  geom_segment(aes(xend = end, yend = id)) +
  scale_x_date(name = NULL, breaks = seq(from = as.Date("1789-01-01"), to = as.Date("2020-01-01"), by = "4 years")) +
  scale_color_manual(values = c(Republican = "#E81B23", Democratic = "#00AEF3")) +
  scale_y_continuous(labels = scales::number_format())

# 3c
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +  # Create scatter plot
  geom_text(aes(x = Inf, y = Inf, label = "Top Right"), hjust = 1, vjust = 1) +  
  geom_text(aes(x = -Inf, y = Inf, label = "Top Left"), hjust = 0, vjust = 1) +   
  geom_text(aes(x = Inf, y = -Inf, label = "Bottom Right"), hjust = 1, vjust = 0) +  
  geom_text(aes(x = -Inf, y = -Inf, label = "Bottom Left"), hjust = 0, vjust = 0)   

# 3d
colnames(presidential)
ggplot(presidential, aes(x = factor(name), y = party)) +  
  geom_boxplot() +  
  labs(
    title = "Boxplot of Party by President",
    x = "President",
    y = "Party"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 

# 3e
presidential |> 
  mutate(id = 33 + row_number()) |> 
  ggplot(aes(x = start, y = id, color = party)) +
  geom_point() +
  geom_segment(aes(xend = end, yend = id)) +
  scale_x_date(name = NULL, breaks = seq(from = as.Date("1789-01-01"), to = as.Date("2020-01-01"), by = "4 years")) +
  scale_color_manual(values = c(Republican = "#E81B23", Democratic = "#00AEF3"))

# 4
ggplot(diamonds, aes(x = carat, y = price)) +
  geom_point(aes(color = cut), alpha = 1/20) +
  theme(legend.position = "right") +
  guides(color = guide_legend(override.aes = list(size = 5, alpha = 1)))

# 11.5.1
# 1
library(ggplot2)
library(ggthemes)
set.seed(123)
data <- data.frame(variable2 = rnorm(100))
ggplot(data, aes(x = variable2)) +
  geom_density() +
  theme_economist() +  # Apply the 'economist' theme from ggthemes
  labs(title = "Density Plot of Variable2", x = "Variable 2", y = "Density")

# 2
ggplot(data, aes(x = variable2)) +
  geom_density() +
  theme_economist() +  # Apply the 'economist' theme from ggthemes
  theme(
    axis.title.x = element_text(color = "blue", face = "bold"),  # Make the x-axis label blue and bold
    axis.title.y = element_text(color = "blue", face = "bold")   # Make the y-axis label blue and bold
  ) +
  labs(title = "Density Plot of Variable2", x = "Variable 2", y = "Density")
